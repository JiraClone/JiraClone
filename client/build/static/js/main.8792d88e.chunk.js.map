{"version":3,"sources":["components/sidebar.module.css","components/header.module.css","views/Login.js","views/Registration.js","components/Header.js","components/Sidebar.js","components/NewTask.js","components/TaskHeader.js","components/Issues.js","components/TaskInfo/TaskTitle.js","components/TaskInfo/TaskComments.js","components/TaskInfo/TaskHistory.js","components/TaskInfo/TaskWorkLog.js","components/TaskInfo/TaskActivity.js","components/TaskInfo/TaskAssignee.js","components/TaskInfo/TaskDesc.js","components/TaskInfo/TaskPriority.js","components/TaskInfo/TaskReporter.js","components/TaskInfo/TaskStatus.js","components/TaskInfo/TaskInfo.js","components/TaskParent.js","components/ProjectSettings.js","views/Main.js","views/NewUser.js","App.js","serviceWorker.js","index.js","components/issues.module.css","components/main.module.css","components/TaskInfo/task.module.css"],"names":["module","exports","Login","props","useState","email","setEmail","password","setPassword","errors","setErrors","className","onSubmit","e","preventDefault","user","Axios","post","withCredentials","then","res","localStorage","setItem","data","_id","name","navigate","catch","err","response","message","type","placeholder","value","onChange","target","to","Registration","setName","confirmPassword","setConfirmPassword","newUser","properties","Header","projects","setProjects","setCurrentProject","setTasks","setFilteredTasks","useEffect","get","getItem","DropdownPersist","open","setOpen","Dropdown","show","onToggle","isOpen","ev","metadata","source","styles","header","logo","src","alt","brandName","headerLinks","as","ButtonGroup","DropdownToggle","style","backgroundColor","border","Menu","map","project","Item","key","onSelect","tasks","selectProject","Divider","document","getElementById","users","updatedProjects","console","log","FormControl","id","createButton","onClick","showModal","NavDropdown","title","logoDiv","userLogo","userProfileText","ItemText","clear","Sidebar","setCurrentView","currentProj","allProjects","setAllProjects","setCurrentProj","selected","setSelected","setShow","handleClose","handleClick","temp","filter","task","assignee","status","temp1","creator","temp2","temp3","Modal","onHide","closeButton","Title","Body","Footer","Button","variant","delete","tempProjects","length","sidebar","sidebarContent","projectTitleDiv","projectTitle","width","height","x","y","rx","ry","stroke","strokeWidth","opacity","currentSection","currentlySelected","link","collapseButtonDiv","collapseButton","cx","cy","r","fill","fontWeight","NewTask","closeModal","currentProject","description","setDescription","priority","setPriority","setAssignee","projectID","setProjectID","io","socket","Form","newTask","axios","emit","Group","Label","Control","p","idx","rows","TaskHeader","search","setSearch","searching","setSearching","includes","searchButton","disabled","Issues","filteredTasks","setTaskNumber","issues","setIssues","highlighted","setHighlighted","number","on","prevIssues","disconnect","sort","field","mergeSort","dataset","middle","Math","floor","left","right","result","i","j","push","merge","slice","panel","color","issueGroup","issue","notSelected","issueNumber","checkbox","bottom","bottomText","TaskTitle","newName","setNewName","visibility","put","TaskComments","newComment","setNewComment","comments","setComments","prevComments","undefined","commentArea","comment","sender","textInput","newCom","saveButton","cancelButton","TaskHistory","TaskWorkLog","Activity","display","setDisplay","taskActivity","selectedButton","taskButton","TaskAssignee","currentTask","allUsers","dropdown","TaskDesc","newDescription","setNewDescription","TaskPriority","setTask","TaskReporter","reporter","setReporter","TaskStatus","setStatus","TaskInfo","taskNumber","loaded","setLoaded","taskInfo","TaskParent","taskNum","setTaskNum","taskParent","taskContent","ProjectSettings","projectName","setProjectName","projectUsers","setProjectUsers","setAllUsers","projectUpdates","index","userID","Main","currentView","size","main","NewUser","textAlign","margin","padding","App","from","noThrow","path","Boolean","window","location","hostname","match","ReactDOM","render","rel","href","integrity","crossOrigin","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8792d88e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__1e7pc\",\"sidebarContent\":\"sidebar_sidebarContent__1sKug\",\"projectTitleDiv\":\"sidebar_projectTitleDiv__2P3PQ\",\"projectTitle\":\"sidebar_projectTitle__1pvBM\",\"titleInfo\":\"sidebar_titleInfo__2lNAR\",\"logo\":\"sidebar_logo__3qfmd\",\"arrow\":\"sidebar_arrow___gDPU\",\"currentSection\":\"sidebar_currentSection__2qlr7\",\"link\":\"sidebar_link__wn0gN\",\"currentlySelected\":\"sidebar_currentlySelected__3kOqO\",\"collapseButtonDiv\":\"sidebar_collapseButtonDiv__1MoPy\",\"collapseButton\":\"sidebar_collapseButton__2_uMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3yTey\",\"logo\":\"header_logo__M33yO\",\"brandName\":\"header_brandName__3pQSA\",\"headerLinks\":\"header_headerLinks__3H4wX\",\"userLogo\":\"header_userLogo__OBtgQ\",\"createButton\":\"header_createButton__3x95u\",\"logoDiv\":\"header_logoDiv__OcF6j\",\"userProfileText\":\"header_userProfileText__3G2LS\",\"searchButton\":\"header_searchButton__TusBM\",\"search\":\"header_search__1Kq4f\"};","import React, { useState } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport Axios from 'axios';\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errors, setErrors] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            email,\r\n            password\r\n        }\r\n        Axios.post('http://localhost:8000/api/users/login', user, {withCredentials: true})\r\n            .then(res =>{\r\n                localStorage.setItem('userID', res.data.user._id);\r\n                localStorage.setItem('userName', res.data.user.name);\r\n                navigate(\"/home\");\r\n            })\r\n            .catch((err) => {\r\n                setErrors(err.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <h1>Geera</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6 container shadow rounded border\">\r\n                    <div className=\"row my-3\">\r\n                        <div className=\"col font-weight-bold text-center\">\r\n                            Log in to your account\r\n                        </div>\r\n                    </div>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"row\">\r\n                            {errors && (\r\n                                <span className=\"text-danger\">{errors}</span>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <input\r\n                                className=\"col text-center m-3\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <input\r\n                                className=\"col text-center m-3\"\r\n                                type=\"password\"\r\n                                placeholder=\"Enter password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row my-3\">\r\n                            <div className=\"col text-center\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Continue\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"row my-3\">\r\n                        <div className=\"col text-center\">\r\n                            <Link to=\"/register\">Sign up for an account</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nconst Registration = (props) => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        const newUser = {\r\n            email,\r\n            name,\r\n            password,\r\n            confirmPassword\r\n        }\r\n        Axios.post('http://localhost:8000/api/users', newUser, {withCredentials: true})\r\n            .then(res =>{\r\n                // console.log(\"User created successfully: \" + res.data.user_id);\r\n                localStorage.setItem('userID', res.data.user._id);\r\n                localStorage.setItem('userName', res.data.user.name);\r\n                navigate(\"/welcome\");\r\n            })\r\n            .catch(err => {\r\n                setErrors(err.response.data.errors);\r\n            });\r\n    }\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <h1>Geera</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6 container shadow rounded border\">\r\n                    <div className=\"row my-3\">\r\n                        <div className=\"col font-weight-bold text-center\">\r\n                            Sign up for your account\r\n                        </div>\r\n                    </div>\r\n                    <form onSubmit={handleSubmit} >\r\n                        <div className=\"row\">\r\n                            {errors && (\r\n                                    <span className=\"text-danger\">\r\n                                    {errors?.email?.properties?.message}\r\n                                    </span>\r\n                                )}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <input className=\"col text-center m-3\" type=\"email\" placeholder=\"Enter email address\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {errors && (\r\n                                    <span className=\"text-danger\">\r\n                                    {errors?.name?.properties?.message}\r\n                                    </span>\r\n                                )}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <input className=\"col text-center m-3\" type=\"text\" placeholder=\"Enter full name\" value={name} onChange={e => setName(e.target.value)}/>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {errors && (\r\n                                    <span className=\"text-danger\">\r\n                                    {errors?.password?.properties?.message}\r\n                                    </span>\r\n                                )}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <input className=\"col text-center m-3\" type=\"password\" placeholder=\"Create password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {errors && (\r\n                                    <span className=\"text-danger\">\r\n                                    {errors?.confirmPassword?.properties?.message}\r\n                                    </span>\r\n                                )}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <input className=\"col text-center m-3\" type=\"password\" placeholder=\"Confirm password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"row my-3\">\r\n                            <div className=\"col text-center\">\r\n                                <button className=\"btn btn-primary\">Sign Up</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"row my-3\">\r\n                        <div className=\"col text-center\">\r\n                            <Link to=\"/login\">Already have an account? Log in</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Registration;","import React, { useState, useEffect } from 'react';\r\nimport styles from './header.module.css';\r\nimport { Dropdown, ButtonGroup, NavDropdown, FormControl } from 'react-bootstrap';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nexport default function Header(props) {\r\n    const {projects, setProjects, setCurrentProject, setTasks, setFilteredTasks} = props;\r\n\r\n    //Function to handle when a project is selected in the dropdown menu\r\n    function selectProject(project) {\r\n        setCurrentProject(project);\r\n        //Do a new request to get the new tasks in case they have been updated\r\n        Axios.get('http://localhost:8000/api/projects/'+project._id)\r\n            .then(res =>{\r\n                setTasks(res.data.tasks);\r\n                setFilteredTasks(res.data.tasks);\r\n            })\r\n    }\r\n\r\n    //Function to create a new project\r\n    function createProject() {\r\n        //Get value from projectName component\r\n        const name = document.getElementById('projectName').value;\r\n\r\n        Axios.post(\r\n            'http://localhost:8000/api/projects',\r\n            { name, users: [localStorage.getItem('userID')] },\r\n            { withCredentials: true }\r\n        )\r\n            .then((res) => {\r\n                const updatedProjects = [...projects, res.data.project];\r\n                setProjects(updatedProjects);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    //Sign out function\r\n    function signOut() {\r\n        localStorage.clear();\r\n        navigate('/login');\r\n        // Axios.delete('http://localhost:8000/api/logout').then((res) => {\r\n        //     console.log('Successfully logged out');\r\n        //     localStorage.clear();\r\n        //     navigate('/login');\r\n        // });\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Load projects\r\n\r\n        Axios.get(\r\n            'http://localhost:8000/api/projects/user/' +\r\n                localStorage.getItem('userID'),\r\n            { withCredentials: true }\r\n        ).then((projects) => {\r\n            setProjects(projects.data);\r\n        });\r\n    }, [setProjects]);\r\n\r\n    //Component wrapper on Bootstrap Dropdown to make sure dropdown menu doesn't close after selecting something\r\n    const DropdownPersist = (props) => {\r\n        const [open, setOpen] = useState(false);\r\n        const onToggle = (isOpen, ev, metadata) => {\r\n            if (metadata.source === 'select' || metadata.source === 'change') {\r\n                setOpen(true);\r\n                return;\r\n            }\r\n            setOpen(isOpen);\r\n        };\r\n        return <Dropdown show={open} onToggle={onToggle} {...props}></Dropdown>;\r\n    };\r\n\r\n    return (\r\n        <div className={styles.header}>\r\n            <div>\r\n                <img\r\n                    className={styles.logo}\r\n                    src=\"https://cdn.dribbble.com/users/317366/screenshots/3696949/dribbble-icecream.png\"\r\n                    alt=\"logo\"\r\n                />\r\n                <span className={styles.brandName}>Geera Software</span>\r\n                <span className={styles.headerLinks}>Your Work</span>\r\n                <DropdownPersist as={ButtonGroup}>\r\n                    <DropdownToggle\r\n                        style={{\r\n                            backgroundColor: 'transparent',\r\n                            border: 'none',\r\n                        }}\r\n                    >\r\n                        <span className={styles.headerLinks}>Projects</span>\r\n                    </DropdownToggle>\r\n                    <Dropdown.Menu>\r\n                        {projects &&\r\n                            projects.map((project) => (\r\n                                <Dropdown.Item\r\n                                    key={project._id}\r\n                                    onSelect={() =>\r\n                                        selectProject(project, project._id)\r\n                                    }\r\n                                >\r\n                                    {project.name}\r\n                                </Dropdown.Item>\r\n                            ))}\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item onSelect={createProject}>\r\n                            + Create New Project\r\n                        </Dropdown.Item>\r\n                        <FormControl\r\n                            id=\"projectName\"\r\n                            type=\"text\"\r\n                            placeholder=\"New project name\"\r\n                        />\r\n                    </Dropdown.Menu>\r\n                </DropdownPersist>\r\n                <span className={styles.headerLinks}>Filters</span>\r\n                <button\r\n                    className={styles.createButton}\r\n                    onClick={props.showModal}\r\n                >\r\n                    Create\r\n                </button>\r\n            </div>\r\n\r\n            <NavDropdown\r\n                title={\r\n                    <div className={styles.logoDiv}>\r\n                        <img\r\n                            className={styles.userLogo}\r\n                            src=\"https://www.underconsideration.com/brandnew/archives/boundless_logo_detail.png\"\r\n                            alt=\"user\"\r\n                        />\r\n                        <span className={styles.userProfileText}>\r\n                            Your profile and settings\r\n                        </span>\r\n                    </div>\r\n                }\r\n                id=\"nav-dropdown\"\r\n            >\r\n                <NavDropdown.ItemText>\r\n                    {localStorage.getItem('userName')}\r\n                </NavDropdown.ItemText>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item onSelect={signOut}>Sign Out</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState} from 'react';\r\nimport styles from './sidebar.module.css';\r\nimport Axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport {Modal, Button} from 'react-bootstrap';\r\n\r\nexport default function Sidebar(props) {\r\n    \r\n    const {setTasks, tasks, setFilteredTasks, setCurrentView, currentProj, allProjects, setAllProjects, setCurrentProj} = props;\r\n    \r\n    const [selected, setSelected] = useState(3);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    //Handle selection\r\n    function handleClick(e){\r\n        setSelected(e.target.id);\r\n        setCurrentView(\"tasks\");\r\n        switch(e.target.id){\r\n            case '1':\r\n                let temp = tasks.filter(task => task.assignee === localStorage.getItem(\"userID\") && task.status === \"0\" );\r\n                setFilteredTasks(temp);\r\n                break;\r\n            case '2':\r\n                let temp1 = tasks.filter(task => task.creator === localStorage.getItem(\"userID\"));\r\n                setFilteredTasks(temp1);\r\n                break;\r\n            case '3':\r\n                setFilteredTasks(tasks);\r\n                break;\r\n            case '4':\r\n                let temp2 = tasks.filter(task => task.status === \"0\" );\r\n                setFilteredTasks(temp2);\r\n                break;\r\n            case '5':\r\n                let temp3 = tasks.filter(task => task.status === \"1\" );\r\n                setFilteredTasks(temp3);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Handle showing project settings\r\n    function showProjectSettings(){\r\n        setSelected(6);\r\n        setCurrentView(\"settings\");\r\n    }\r\n\r\n    //Handle deleting the current project\r\n    function deleteProject(){\r\n        Axios.delete('http://localhost:8000/api/projects/'+currentProj._id)\r\n            .then(res =>{\r\n                //Remove project from all projects\r\n                handleClose();\r\n                const tempProjects = allProjects.filter(project => project._id !== currentProj._id);\r\n                setAllProjects(tempProjects);\r\n                //If no more projects left then navigate to welcom\r\n                if(tempProjects.length < 1){\r\n                    navigate('/welcome');\r\n                }else{\r\n                    //Set the current project to the first in the project list\r\n                    setCurrentProj(tempProjects[0]);\r\n                    //Update the tasks\r\n                    setTasks(tempProjects[0].tasks);\r\n                    setFilteredTasks(tempProjects[0].tasks);\r\n                }\r\n                \r\n            })\r\n            .catch(err =>{\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    if(currentProj === null) return <div>Loading...</div>\r\n\r\n    return (\r\n        <>\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Are you sure you want to delete {currentProj.name}?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Deleting the project will also delete all tasks associated with the project and cannot be undone.</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={deleteProject}>\r\n                    Delete\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n            <div className={ styles.sidebar }>\r\n            <div className={ styles.sidebarContent }>\r\n                <div className={ styles.projectTitleDiv }>\r\n                    <img className={ styles.logo } src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Picasa.svg/256px-Picasa.svg.png\" alt=\"logo\"/>\r\n                    <div>\r\n                        <span className={ styles.projectTitle }>{currentProj.name}</span>\r\n                    </div>\r\n                </div>\r\n                <svg width=\"240\" height=\"24\">\r\n                    <rect x=\"4\" y=\"12\" rx=\"2\" ry=\"2\" width=\"220\" height=\"1\"\r\n                        style={{stroke:\"black\", strokeWidth:\"1\", opacity:\"0.1\"}} />\r\n                </svg>\r\n                <div className={ styles.currentSection }>Issues and Filters</div>\r\n                <div id=\"1\" onClick={handleClick} className={ (selected === \"1\") ? styles.currentlySelected : styles.link }>My open issues</div>\r\n                <div id=\"2\" onClick={handleClick} className={ (selected === \"2\") ? styles.currentlySelected : styles.link }>Reported by me</div>\r\n                <div id=\"3\" onClick={handleClick} className={ (selected === \"3\") ? styles.currentlySelected : styles.link }>All issues</div>\r\n                <div id=\"4\" onClick={handleClick} className={ (selected === \"4\") ? styles.currentlySelected : styles.link }>Open issues</div>\r\n                <div id=\"5\" onClick={handleClick} className={ (selected === \"5\") ? styles.currentlySelected : styles.link  }>Done issues</div>\r\n                <svg width=\"240\" height=\"24\">\r\n                    <rect x=\"4\" y=\"12\" rx=\"2\" ry=\"2\" width=\"220\" height=\"1\"\r\n                        style={{stroke:\"black\", strokeWidth:\"1\", opacity:\"0.1\"}} />\r\n                </svg>\r\n                <div id=\"6\" onClick={showProjectSettings} className={ (selected === \"6\") ? styles.currentlySelected : styles.link } >Project Settings</div>\r\n                <div onClick={handleShow} className={ styles.link + \" text-danger\"} >Delete Project</div>\r\n            </div>\r\n            <div className={ styles.collapseButtonDiv }>\r\n                <svg className={ styles.collapseButton } width=\"26\" height=\"26\">\r\n                    <circle cx=\"13\" cy=\"13\" r=\"12\" stroke=\"white\" strokeWidth=\"1\" fill=\"white\"/> \r\n                    <foreignObject x=\"7\" y=\"-2\" width=\"24\" height=\"24\">\r\n                        <p style={{fontWeight:\"bold\"}}>{'<'}</p>\r\n                    </foreignObject>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nexport default function NewTask({\r\n    closeModal,\r\n    currentProject,\r\n    projects,\r\n    users,\r\n}) {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [priority, setPriority] = useState(0);\r\n    const [assignee, setAssignee] = useState(null);\r\n    const creator = localStorage.getItem('userID');\r\n    const status = '0';\r\n    const [projectID, setProjectID] = useState(0);\r\n    const [socket] = useState(() => io(':80'));\r\n\r\n    // useEffect(() => {\r\n    //     setProject(currentProject);\r\n    // }, [currentProject]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //Creating new task\r\n\r\n        const newTask = {\r\n            name,\r\n            description,\r\n            priority,\r\n            assignee,\r\n            creator,\r\n            status,\r\n            projectID,\r\n        };\r\n\r\n        axios\r\n            .post('http://localhost:8000/api/tasks/', newTask, {\r\n                withCredentials: true,\r\n            })\r\n            .then((res) => {\r\n                //broadcasts new task so the issues list will auto update\r\n                socket.emit('new task created', res.data.task);\r\n                return res.data;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\r\n                    'this is from new task page: ',\r\n                    err.response.data.errors\r\n                );\r\n                // const errorResponse = err.response.data.errors;\r\n                // const errorArr = [];\r\n                // for (const key of Object.keys(errorResponse)) {\r\n                //     errorArr.push(errorResponse[key].properties.message);\r\n                // }\r\n                // setErrors(errorArr);\r\n                // setErrors(err.response.data.message);\r\n                // Object.values(err.response.data.errors).map(\r\n                //     (field) => field.properties.message\r\n                // )\r\n            });\r\n\r\n        // Adding the task to the project selected\r\n\r\n        // axios\r\n        //     .put(\r\n        //         `http://localhost:8000/api/projects/${\r\n        //             project._id\r\n        //         }/${localStorage.getItem('userId')}`\r\n        //     )\r\n        //     .then((res) => res.data)\r\n        //     .catch((err) => {\r\n        //         const errorResponse = err.response.data.errors;\r\n        //         const errorArr = [];\r\n        //         for (const key of Object.keys(errorResponse)) {\r\n        //             errorArr.push(errorResponse[key].properties.message);\r\n        //         }\r\n        //         setErrors(errorArr);\r\n        //     });\r\n\r\n        // const updatedProj = {\r\n        //     name: project.name,\r\n        //     tasks: [...project.tasks, task._id],\r\n        //     users: project.users,\r\n        //     dueDate: project.dueDate,\r\n        // };\r\n\r\n        // console.log(\r\n        //     'this is the project: ',\r\n        //     project,\r\n        //     'and this is the updated one: ',\r\n        //     updatedProj\r\n        // );\r\n\r\n        // axios\r\n        //     .put(\r\n        //         'http://localhost:8000/api/projects' + project._id,\r\n        //         updatedProj,\r\n        //         { withCredentials: true }\r\n        //     )\r\n        //     .then((res) => res.data)\r\n        //     .catch((err) => {\r\n        //         // const errorResponse = err.response.data.errors;\r\n        //         // const errorArr = [];\r\n        //         // for (const key of Object.keys(errorResponse)) {\r\n        //         //     errorArr.push(errorResponse[key].properties.message);\r\n        //         // }\r\n        //         // setErrors(errorArr);\r\n        //         setErrors(err.response.data.message);\r\n        //     });\r\n    };\r\n\r\n    if (projects == null) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            {/* {errors.map((err, idx) => (\r\n                <p key={idx} className=\"text-danger\">\r\n                    {err}\r\n                </p>\r\n            ))} */}\r\n            <Form.Group>\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    value={projectID}\r\n                    onChange={(e) => {\r\n                        setProjectID(e.target.value);\r\n                        console.log('we changed project to: ', e.target.value);\r\n                    }}\r\n                >\r\n                    {projects.map((p, idx) => {\r\n                        return (\r\n                            <option key={idx} value={p._id}>\r\n                                {p.name}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            {/* This is for issue Type */}\r\n            {/* <Form.Group>\r\n                <Form.Label>Issue Type</Form.Label>\r\n                <Form.Control as=\"select\"\r\n                    value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                >\r\n                    {tasks.map((t, idx) => {\r\n                        <option key={idx} value={t}>\r\n                            {t.type}\r\n                        </option>;\r\n                    })}\r\n                </Form.Control>\r\n            </Form.Group> */}\r\n            <Form.Group>\r\n                <Form.Label>Summary</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n            {/* <Form.Group>\r\n                <Form.Label>Attachment</Form.Label>\r\n                <p>This is for the attachment feature</p>\r\n            </Form.Group> */}\r\n            {/* <Form.Group>\r\n                <Form.Label>Due Date</Form.Label>\r\n                <Form.Control\r\n                    type=\"date\"\r\n                    value={dueDate}\r\n                    onChange={(e) => setDueDate(e.target.value)}\r\n                />\r\n            </Form.Group> */}\r\n            <Form.Group>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                    as=\"textarea\"\r\n                    rows=\"2\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            {/* <Form.Group>\r\n                <Form.Label>Reporter</Form.Label>\r\n                <Form.Control\r\n                    value={creator}\r\n                    onChange={(e) => setCreator(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group> */}\r\n            <Form.Group>\r\n                <Form.Label>Assignee</Form.Label>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    value={assignee}\r\n                    onChange={(e) => setAssignee(e.target.value)}\r\n                >\r\n                    {<option value={null}>Unassigned</option>}\r\n                    {users.map((user, idx) => {\r\n                        return (\r\n                            <option value={user._id} key={idx}>\r\n                                {user.name}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </Form.Control>\r\n                {/* <a>Assign to me</a> */}\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Priority</Form.Label>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    value={priority}\r\n                    onChange={(e) => setPriority(e.target.value)}\r\n                >\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            {/* <Form.Group>\r\n                <Form.Label>Labels</Form.Label>\r\n                <Form.Control\r\n                    value={labels}\r\n                    onChange={(e) => setLabels(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group> */}\r\n            <div className=\"text-right\">\r\n                <Button variant=\"primary\" type=\"submit\" onClick={closeModal}>\r\n                    Create\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport styles from './header.module.css';\r\n\r\nexport default function TaskHeader({currentProject, setFilteredTasks}) {\r\n    const [search, setSearch] = useState('');\r\n    const [searching, setSearching] = useState(false);\r\n\r\n    if (currentProject == null) return \"Loading...\";\r\n\r\n    const tasks = currentProject.tasks;\r\n\r\n    const performSearch = () => {\r\n        setFilteredTasks(tasks.filter(task => task.name.includes(search) || task.description.includes(search)));\r\n        setSearching(true);\r\n    }\r\n\r\n    const clearSearch = () => {\r\n        setFilteredTasks(currentProject.tasks);\r\n        setSearch('');\r\n        setSearching(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <p className=\"text-secondary\">\r\n                Project / {currentProject.name}\r\n            </p>\r\n            <h4>All issues</h4>\r\n            <input type=\"text\" \r\n                value={search} \r\n                onChange={e => setSearch(e.target.value)}\r\n                className= { styles.search } /> \r\n            <button type=\"submit\"\r\n                    onClick={ performSearch } \r\n                    className={ styles.searchButton }\r\n                    disabled={search === ''}>\r\n                        Advanced search\r\n            </button>\r\n            {searching && <button onClick= { clearSearch } className={ styles.searchButton }>Clear Search</button> }\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './issues.module.css';\r\nimport io from 'socket.io-client';\r\nimport {Dropdown, ButtonGroup} from 'react-bootstrap';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport { navigate } from '@reach/router';\r\n\r\n// import { useDispatch} from 'react-redux';\r\n\r\nexport default function Issues({filteredTasks, setTaskNumber, id, task}) {\r\n    const [issues, setIssues] = useState(null);\r\n    const [highlighted, setHighlighted] = useState(null);\r\n    const [socket] = useState(() => io(':80'));\r\n\r\n    \r\n    // const dispatch = useDispatch();\r\n\r\n    const handleClick = (issue) => {\r\n        setHighlighted(issue.number);\r\n        setTaskNumber(issue._id);\r\n        navigate('/home/geer/'+issue._id);\r\n        // dispatch({\r\n        //     type: 'TASK_NUMBER',\r\n        //     task: {\r\n        //         number: issueNum,\r\n        //     },\r\n        // });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(task){\r\n            setHighlighted(task.number);\r\n        }\r\n    },[task])\r\n\r\n    useEffect(()=>{\r\n        setIssues(filteredTasks);\r\n    }, [filteredTasks])\r\n\r\n    useEffect(() => {\r\n        socket.on('new task added', newTask => {\r\n            setIssues(prevIssues => {\r\n                return [...prevIssues, newTask];\r\n            })\r\n        })\r\n\r\n        return () => socket.disconnect(true);\r\n    }, [socket]);\r\n\r\n    if (issues === null) return 'Loading...';\r\n\r\n    const DropdownPersist = (props) => {\r\n        const [open, setOpen] = useState(false);\r\n        const onToggle = (isOpen, ev, metadata) => {\r\n          if (metadata.source === \"select\" || metadata.source === \"change\") {\r\n            setOpen(true);\r\n            return;\r\n          }\r\n          setOpen(isOpen);\r\n        };\r\n        return <Dropdown show={open} onToggle={onToggle} {...props}></Dropdown>;\r\n    };\r\n\r\n    const sort = field => {\r\n\r\n        function merge(left, right){\r\n            let result = [];\r\n            let i = 0;\r\n            let j = 0;\r\n            while(i<left.length && j<right.length){\r\n                if(left[i][field] < right[j][field]){\r\n                    result.push(left[i])\r\n                    i++;\r\n                }else{\r\n                    result.push(right[j]);\r\n                    j++;\r\n                }\r\n            }\r\n            while(i < left.length){\r\n                result.push(left[i]);\r\n                i++;\r\n            }\r\n            while(j < right.length){\r\n                result.push(right[j]);\r\n                j++;\r\n            }\r\n            return result;\r\n        }\r\n        \r\n        function mergeSort(dataset){\r\n            if(dataset.length<2){\r\n                return dataset;\r\n            }else{\r\n                let middle = Math.floor(dataset.length/2);\r\n                let left = mergeSort(dataset.slice(0,middle));\r\n                let right = mergeSort(dataset.slice(middle, dataset.length));\r\n                return merge(left, right);\r\n            }\r\n        }\r\n        setIssues(mergeSort(issues));\r\n    }\r\n\r\n    return (\r\n        <div className={ styles.panel }>\r\n            <DropdownPersist as={ButtonGroup} >\r\n                <DropdownToggle style={{\"backgroundColor\":\"transparent\", \"border\": \"none\"}}><span style={{color:\"black\"}}>Sort by</span></DropdownToggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item onSelect={() => sort('createdAt')}>Created</Dropdown.Item>\r\n                    <Dropdown.Item onSelect={() => sort('priority')}>Priority</Dropdown.Item>\r\n                    <Dropdown.Item onSelect={() => sort('status')}>Status</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </DropdownPersist>\r\n            <div className={styles.issueGroup}>\r\n                {issues.map((issue) => {\r\n                    return (\r\n                        <div\r\n                            key={issue._id}\r\n                            className={\r\n                                issue.number === highlighted\r\n                                    ? `${styles.selected} ${styles.issue}`\r\n                                    : `${styles.notSelected} ${styles.issue}`\r\n                            }\r\n                            onClick={() => handleClick(issue)}\r\n                        >\r\n                            <span>{issue.name}</span>\r\n                            <br />\r\n                            <span className={styles.issueNumber}>\r\n                                <img\r\n                                    className={styles.checkbox}\r\n                                    src=\"https://upload.wikimedia.org/wikipedia/donate/thumb/8/89/Ooui-checkbox-selected.svg/1024px-Ooui-checkbox-selected.svg.png\"\r\n                                    alt=\"check\"\r\n                                />\r\n                                GEER-{issue.number}\r\n                            </span>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className={styles.bottom}>\r\n                <span className={styles.bottomText}>{ highlighted!==null ? `issue ${highlighted} of ${ issues.length }` : ' ' }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function TaskTitle({task}){\r\n    const [name, setName] = useState(task.name);\r\n    const [newName, setNewName] = useState(task.name);\r\n    const [selected, setSelected] = useState(false);\r\n\r\n    \r\n    const changeName = () => {\r\n        axios.put(`http://localhost:8000/api/tasks/${task._id}`, {name: newName}, {withCredentials: true,})\r\n            .then(res => {\r\n                setName(newName);\r\n                setSelected(false);\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    const cancelChanges = () => {\r\n        setNewName(name);\r\n        setSelected(false);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 onClick={() => setSelected(!selected)}>{name}</h1>\r\n            <div style={selected ? {visibility: \"visible\"} : {visibility:\"hidden\"}}>\r\n                <input type=\"text\" value={newName} onChange={e => setNewName(e.target.value)}/>\r\n                <button type=\"button\" onClick={ changeName } className=\"btn btn-primary btn-sm\">Change Name</button>\r\n                <button type=\"button\" onClick={ cancelChanges } className=\"btn btn-danger btn-sm\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './task.module.css';\r\nimport io from 'socket.io-client';\r\n\r\nexport default function TaskComments({ task }) {\r\n    const [newComment, setNewComment] = useState('');\r\n    const [comments, setComments] = useState(task.comments);\r\n    const id = task._id;\r\n    const [socket] = useState(() => io(':80'));\r\n\r\n    const addComment = () => {\r\n        const newCom = {\r\n            sender: localStorage.getItem('userName'),\r\n            message: newComment,\r\n        };\r\n        axios\r\n            .put(\r\n                `http://localhost:8000/api/tasks/${id}`,\r\n                { comments: [...comments, newCom] },\r\n                { withCredentials: true }\r\n            )\r\n            .then((res) => {\r\n                socket.emit('new comment created', newCom);\r\n\r\n                setNewComment('');\r\n            })\r\n            .catch(console.log);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on('new comment added', (newComment) => {\r\n            setComments((prevComments) => {\r\n                return [...prevComments, newComment];\r\n            });\r\n        });\r\n\r\n        return () => socket.disconnect(true);\r\n    }, [socket]);\r\n\r\n    if (comments === undefined) return 'Loading...';\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.commentArea}>\r\n                {comments.map((comment, idx) => {\r\n                    return (\r\n                        <div key={idx}>\r\n                            <p>{comment.sender}</p>\r\n                            <p>{comment.message}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <textarea\r\n                type=\"text\"\r\n                value={newComment}\r\n                onChange={(e) => setNewComment(e.target.value)}\r\n                placeholder=\"leave a comment\"\r\n                className={styles.textInput}\r\n            />\r\n            <button\r\n                type=\"button\"\r\n                onClick={addComment}\r\n                className={styles.saveButton}\r\n            >\r\n                Save\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                onClick={() => setNewComment('')}\r\n                className={styles.cancelButton}\r\n            >\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function TaskHistory(){\r\n    return <h3>Task History</h3>\r\n}","import React from 'react';\r\n\r\nexport default function TaskWorkLog(){\r\n    return <h3>Task Work Log</h3>\r\n}","import React, { useState } from 'react';\r\nimport styles from './task.module.css';\r\nimport TaskComments from './TaskComments';\r\nimport TaskHistory from './TaskHistory';\r\nimport TaskWorkLog from './TaskWorkLog';\r\n\r\n\r\nexport default function Activity({task}) {\r\n\r\n    const [display, setDisplay] = useState('comments');\r\n\r\n    return (\r\n        <div className={styles.taskActivity}>\r\n            <h5>Activity</h5>\r\n            <div>\r\n                <span style={{fontWeight:\"bold\"}}>Show:</span>\r\n                <button onClick={() => setDisplay('comments')} \r\n                        className={ display === 'comments' ?  styles.selectedButton : styles.taskButton }>\r\n                            Comments\r\n                </button>\r\n                <button onClick={() => setDisplay('history')} \r\n                        className={ display === 'history' ?  styles.selectedButton : styles.taskButton }>\r\n                            History\r\n                </button>\r\n                <button onClick={() => setDisplay('work log')} \r\n                        className={ display === 'work log' ?  styles.selectedButton : styles.taskButton }>\r\n                            Work Log\r\n                </button>\r\n            </div>\r\n            <div className=\"row\"><p></p></div>\r\n            {display === 'comments' ? <TaskComments task={task} />: <></>}\r\n            {display === 'history' ? <TaskHistory />: <></>}\r\n            {display === 'work log' ? <TaskWorkLog />: <></>}\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormControl } from 'react-bootstrap';\r\n// import Select from 'react-dropdown-select';\r\nimport styles from './task.module.css';\r\n\r\n\r\nexport default function TaskAssignee({\r\n    currentTask,\r\n    allUsers,\r\n    // errors,\r\n    // setErrors,\r\n}) {\r\n    const [assignee, setAssignee] = useState(currentTask.assignee === null ? \"Unassigned\" : currentTask.assignee);\r\n    const handleChange = (value) => {\r\n        setAssignee(value);\r\n        if(value === \"Unassigned\"){\r\n            value = null;\r\n        }\r\n\r\n        axios\r\n            .put(\r\n                `http://localhost:8000/api/tasks/${currentTask._id}`,\r\n                { assignee: value },\r\n                { withCredentials: true }\r\n            )\r\n            .then((res) => res.data)\r\n            .catch(console.log);\r\n        // (err) => setErrors([...errors, err.response.data.message]));\r\n    };\r\n\r\n    if (assignee === undefined) return 'Loading...';\r\n    return (\r\n        <div className={ styles.dropdown }>\r\n            <h5>Assignee</h5>\r\n            <FormControl\r\n                as=\"select\"\r\n                value={assignee}\r\n                onChange={(e) => handleChange(e.target.value)}\r\n            >\r\n                <option value=\"Unassigned\">Unassigned</option>\r\n                {allUsers.map((user, idx) => {\r\n                    return (\r\n                        <option key={idx} value={user._id}>\r\n                            {user.name}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </FormControl>\r\n            {/* <Select\r\n                options={allUsers}\r\n                onChange={(values) => handleChange(values)}\r\n                multi={false}\r\n                clearable={true}\r\n                searchable={true}\r\n                dropdownHandle={false}\r\n                labelField=\"name\"\r\n                values={[\r\n                    allUsers.find((user) => user._id === currentTask.assignee),\r\n                ]}\r\n                // placeholder={assignee.name}\r\n            /> */}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './task.module.css';\r\n\r\n\r\nexport default function TaskDesc({task}) {\r\n    const [description, setDescription] = useState(task.description);\r\n    const [newDescription, setNewDescription] = useState(task.description);\r\n    const id = task._id;\r\n\r\n    const saveDesc = () => {\r\n        axios.put(`http://localhost:8000/api/tasks/${id}`, \r\n                { description: newDescription }, \r\n                { withCredentials: true }\r\n                )\r\n            .then(res => {\r\n                setDescription(newDescription);\r\n            })\r\n            .catch(console.log);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h5>Description</h5>\r\n            <textarea value={newDescription} \r\n                    onChange={e => setNewDescription(e.target.value)} \r\n                    placeholder=\"Add a description...\"\r\n                    className={styles.textInput}\r\n            />\r\n            <button type=\"button\"\r\n                    className={styles.saveButton}\r\n                    onClick={ saveDesc }>\r\n                        Save\r\n            </button>\r\n            <button type=\"button\"\r\n                    className={styles.cancelButton}\r\n                    onClick={() => setNewDescription(description)}>\r\n                        Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport styles from './task.module.css';\r\n\r\n\r\n\r\nexport default function TaskPriority({ currentTask, setTask }) {\r\n    const [priority, setPriority] = useState(currentTask.priority);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        axios.put(`http://localhost:8000/api/tasks/${currentTask._id}`,\r\n                { priority: value },\r\n                { withCredentials: true }\r\n            )\r\n            .then(() => setPriority(value))\r\n            .catch(console.log);\r\n    };\r\n\r\n    return (\r\n        <div className={ styles.dropdown }>\r\n            <h5>Priority</h5>\r\n            <FormControl\r\n                as=\"select\"\r\n                value={priority}\r\n                onChange={(e) => handleChange(e.target.value)}\r\n            >\r\n                <option value={1}>High</option>\r\n                <option value={2}>Medium</option>\r\n                <option value={3}>Low</option>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport styles from './task.module.css';\r\n\r\n\r\nexport default function TaskReporter({\r\n    currentTask,\r\n    allUsers,\r\n    // errors,\r\n    // setErrors,\r\n}) {\r\n    const [reporter, setReporter] = useState(currentTask.creator === null ? \"Unassigned\" : currentTask.creator);\r\n    const handleChange = (value) => {\r\n        setReporter(value);\r\n        if(value === \"Unassigned\"){\r\n            value = null;\r\n        }\r\n        axios\r\n            .put(\r\n                `http://localhost:8000/api/tasks/${currentTask._id}`,\r\n                { creator: value },\r\n                { withCredentials: true }\r\n            )\r\n            .then((res) => res.data)\r\n            .catch(console.log);\r\n        // (err) => setErrors([...errors, err.response.data.message]));\r\n    };\r\n\r\n    if (reporter === undefined) return 'Loading...';\r\n    return (\r\n        <div className={ styles.dropdown }>\r\n            <h5>Reporter</h5>\r\n            <FormControl\r\n                as=\"select\"\r\n                value={reporter}\r\n                onChange={(e) => handleChange(e.target.value)}\r\n            >\r\n                <option value=\"Unassigned\">Unassigned</option>\r\n                {allUsers.map((user, idx) => {\r\n                    return (\r\n                        <option key={idx} value={user._id}>\r\n                            {user.name}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </FormControl>\r\n            {/* <Select\r\n                options={allUsers}\r\n                onChange={(values) => handleChange(values)}\r\n                multi={false}\r\n                clearable={true}\r\n                searchable={true}\r\n                dropdownHandle={false}\r\n                labelField=\"name\"\r\n                values={[\r\n                    allUsers.find((user) => user._id === currentTask.creator),\r\n                ]}\r\n            /> */}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport styles from './task.module.css';\r\n\r\nexport default function TaskStatus({ currentTask }) {\r\n    const [status, setStatus] = useState(currentTask.status);\r\n\r\n    const handleChange = (value) => {\r\n        setStatus(value);\r\n\r\n        axios.put(`http://localhost:8000/api/tasks/${currentTask._id}`,\r\n                { status: value },\r\n                { withCredentials: true }\r\n            )\r\n            .then((res) => res.data)\r\n            .catch(console.log);\r\n    };\r\n\r\n    return (\r\n        <div className={ styles.dropdown }>\r\n            <h5>Status</h5>\r\n            <FormControl\r\n                as=\"select\"\r\n                value={status}\r\n                onChange={(e) => handleChange(e.target.value)}\r\n            >\r\n                <option value=\"0\">To Do</option>\r\n                <option value=\"1\">Done</option>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TaskTitle from './TaskTitle';\r\nimport TaskActivity from './TaskActivity';\r\nimport TaskAssignee from './TaskAssignee';\r\nimport TaskDesc from './TaskDesc';\r\nimport TaskPriority from './TaskPriority';\r\nimport TaskReporter from './TaskReporter';\r\nimport TaskStatus from './TaskStatus';\r\n\r\nimport styles from './task.module.css';\r\n\r\nexport default function TaskInfo({ allUsers, taskNumber }) {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [task, setTask] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoaded(false);\r\n        axios\r\n            .get(`http://localhost:8000/api/tasks/${taskNumber}`, {\r\n                withCredentials: true,\r\n            })\r\n            .then((res) => {\r\n                setTask(res.data);\r\n                setLoaded(true);\r\n            })\r\n            .catch(console.log);\r\n    }, [taskNumber]);\r\n\r\n    if (!loaded) return 'Loading...';\r\n\r\n    if(taskNumber === undefined) console.log('tasknumber undefined')\r\n\r\n    return (\r\n        <div className={`row ${styles.taskInfo} `}>\r\n            <div className=\"col-8\">\r\n                <p>GEER-{task.number}</p>\r\n                <TaskTitle task={task} />\r\n                <TaskDesc task={task} />\r\n                <TaskActivity task={task} />\r\n            </div>\r\n            {taskNumber === undefined ? \r\n                <div className=\"col-4\">\r\n                    <p>Select or create a task to get started!</p> \r\n                </div>\r\n                : \r\n                <div className=\"col-4\">\r\n                    <TaskStatus currentTask={task} />\r\n                    <TaskAssignee allUsers={allUsers} currentTask={task} />\r\n                    <TaskReporter allUsers={allUsers} currentTask={task} />\r\n                    <TaskPriority currentTask={task} setTask={setTask}/>\r\n                </div>\r\n                }\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TaskHeader from './TaskHeader';\r\nimport Issues from './Issues';\r\nimport TaskInfo from './TaskInfo/TaskInfo';\r\nimport styles from './main.module.css';\r\n\r\n\r\nexport default function TaskParent({\r\n    id,\r\n    task,\r\n    filteredTasks,\r\n    setFilteredTasks,\r\n    currentProject,\r\n    allUsers,\r\n}) {\r\n    const [taskNum, setTaskNum] = useState(id);\r\n\r\n    return (\r\n        <div className={ styles.taskParent }>\r\n            <TaskHeader currentProject={currentProject} setFilteredTasks={setFilteredTasks}/>\r\n            <div className={ styles.taskContent }>\r\n                <Issues\r\n                    setTaskNumber={setTaskNum}\r\n                    filteredTasks={filteredTasks}\r\n                    id={id}\r\n                    task={task}\r\n                />\r\n                <TaskInfo\r\n                    allUsers={allUsers}\r\n                    taskNumber={taskNum}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst ProjectSettings = (props) => {\r\n\r\n    \r\n\r\n    const {setCurrentView, currentProj, setCurrentProj, allProjects, setAllProjects} = props;\r\n    const [projectName, setProjectName] = useState(\"\");\r\n    const [projectUsers, setProjectUsers] = useState([]);\r\n    const [allUsers, setAllUsers] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        Axios.get('http://localhost:8000/api/users')\r\n            .then(res => {\r\n                setAllUsers(res.data);\r\n            })\r\n        Axios.get('http://localhost:8000/api/projects/'+currentProj._id)\r\n        .then(res =>{\r\n            setProjectName(res.data.name);\r\n            setProjectUsers(res.data.users);\r\n        })\r\n    }, [currentProj])\r\n\r\n    //Handle update of project\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        const projectUpdates = {\r\n            name: projectName,\r\n            users: projectUsers.map(user => user._id)\r\n        }\r\n        \r\n        //Update allProjects with new project name so data updates on frontend\r\n        setAllProjects(allProjects.map(project => {\r\n            if(project.name === currentProj.name) {\r\n                project.name = projectName;\r\n            }\r\n            return project;\r\n        }));\r\n        //Update currentProj fields so data updates on frontend\r\n        currentProj.name = projectName;\r\n        setCurrentProj(currentProj);\r\n        Axios.put('http://localhost:8000/api/projects/'+currentProj._id, projectUpdates, {withCredentials: true})\r\n            .then(res =>{\r\n                setCurrentView(\"tasks\");\r\n            })\r\n            .catch(err =>{\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    //Handle adding a user to the project\r\n    //Only adds locally does not push to server until hitting save\r\n    function addUser(e){\r\n        e.preventDefault();\r\n        const user = document.getElementById('userToAdd');\r\n        setProjectUsers([...projectUsers, allUsers[user.value]]);\r\n    }\r\n\r\n    //Handle removing a user from the project\r\n    //Only removes locally does not update server until hitting save\r\n    function removeUser(userID){\r\n        setProjectUsers(projectUsers.filter(user => user._id !== userID));\r\n    }\r\n\r\n    if(currentProj === null) return <div>Loading...</div>\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit} >\r\n                <div className=\"row my-4 text-left\">\r\n                    <h1>Project Settings</h1>\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <div className=\"col-2\">\r\n                        <label>Name: </label>\r\n                    </div>\r\n                    <input className=\"col-3\" type=\"text\" value={projectName} onChange={ e => setProjectName(e.target.value)} />\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <div className=\"col-2\">\r\n                        <label>Add User: </label>\r\n                    </div>\r\n                    <select id=\"userToAdd\" className=\"col-3\" >\r\n                        {\r\n                            allUsers.map((user, index) => \r\n                                <option key={index} value={index}>{user.name}</option>\r\n                            )\r\n                        }\r\n                        \r\n                    </select>\r\n                    <div className=\"col-2\">\r\n                        <button onClick={addUser} className=\"btn btn-primary\">Add User</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row my-2\">\r\n                    <div className=\"col-2\">\r\n                        <label>Users : </label>\r\n                    </div>\r\n                    <div className=\"col-7\">\r\n                        {\r\n                            projectUsers.map((user, index) => \r\n                                <div onClick={() => removeUser(user._id)} value={user._id} key={index} className=\"mr-2 btn btn-secondary\">{user.name} X</div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row my-5\">\r\n                    <div className=\"col-5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-right\">\r\n                                <div onClick={() => setCurrentView(\"tasks\")} className=\"btn btn-secondary\">Cancel</div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save Changes</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ProjectSettings;","import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\nimport NewTask from '../components/NewTask';\r\nimport TaskParent from '../components/TaskParent';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport ProjectSettings from '../components/ProjectSettings';\r\nimport io from 'socket.io-client';\r\nimport { navigate } from '@reach/router';\r\nimport styles from '../components/main.module.css';\r\n\r\nexport default function Main({ id }) {\r\n    const [show, setShow] = useState(false);\r\n    const [allUsers, setAllUsers] = useState(null);\r\n    const [allProjects, setAllProjects] = useState(null);\r\n    const [currentProj, setCurrentProj] = useState(null);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n    const [currentView, setCurrentView] = useState('tasks');\r\n    const [socket] = useState(() => io(':80'));\r\n    //new\r\n    const [task, setTask] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //Make sure a user is logged in\r\n        if (localStorage.getItem('userID') === null) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n        Axios.get(\r\n            'http://localhost:8000/api/projects/user/' +\r\n                localStorage.getItem('userID'),\r\n            { withCredentials: true }\r\n        ).then((res) => {\r\n            //this is to prevent the site from crashing if a user has no projects created yet\r\n            if (res.data.length === 0) {\r\n                return navigate('/welcome');\r\n            }\r\n            setAllProjects(res.data);\r\n            //updating currentProj to a default\r\n            setCurrentProj(res.data[0]);\r\n            setFilteredTasks(res.data[0].tasks);\r\n            setTasks(res.data[0].tasks);\r\n        });\r\n\r\n        Axios.get('http://localhost:8000/api/users', {\r\n            withCredentials: true,\r\n        }).then((users) => setAllUsers(users.data));\r\n\r\n        //new\r\n        if (id) {\r\n            Axios.get('http://localhost:8000/api/tasks/' + id, {\r\n                withCredentials: true,\r\n            })\r\n                .then((res) => setTask(res.data))\r\n                .catch(console.log);\r\n        }\r\n\r\n        socket.on('new task added', (newTask) => {\r\n            setTasks((prevIssues) => {\r\n                return [...prevIssues, newTask];\r\n            });\r\n        });\r\n\r\n        return () => socket.disconnect(true);\r\n    }, [socket]);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    if (allProjects == null) return <p>Loading...</p>;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <Header\r\n                        showModal={handleShow}\r\n                        setCurrentProject={setCurrentProj}\r\n                        projects={allProjects}\r\n                        setProjects={setAllProjects}\r\n                        setTasks={setTasks}\r\n                        setFilteredTasks={setFilteredTasks}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <div className=\"ml-1\">\r\n                        {/* <div className=\"col\"> */}\r\n                        <Modal.Title>Create issue</Modal.Title>\r\n                        {/* </div>\r\n                        <div className=\"row col\">\r\n                            <Button variant=\"light\">Import issues</Button>\r\n                            {/* will need to create a drop down \r\n                            <Button variant=\"light\">Configure fields</Button>\r\n                        </div> */}\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <NewTask\r\n                        closeModal={handleClose}\r\n                        currentProject={currentProj}\r\n                        setCurrentProject={setCurrentProj}\r\n                        projects={allProjects}\r\n                        users={allUsers}\r\n                        // setTasks={setTasks}\r\n                        // onSubmit={(f) => setSubmitFunction(f)}\r\n                    />\r\n                </Modal.Body>\r\n                {/* <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={submitFunction}>\r\n                        Create\r\n                    </Button>\r\n                </Modal.Footer> */}\r\n            </Modal>\r\n            <div className={styles.main}>\r\n                <Sidebar\r\n                    tasks={tasks}\r\n                    setTasks={setTasks}\r\n                    filteredTasks={filteredTasks}\r\n                    setFilteredTasks={setFilteredTasks}\r\n                    setCurrentView={setCurrentView}\r\n                    currentProj={currentProj}\r\n                    allProjects={allProjects}\r\n                    setCurrentProj={setCurrentProj}\r\n                    setAllProjects={setAllProjects}\r\n                />\r\n                {currentView === 'tasks' ? (\r\n                    <TaskParent\r\n                        id={id}\r\n                        task={task}\r\n                        filteredTasks={filteredTasks}\r\n                        setFilteredTasks={setFilteredTasks}\r\n                        currentProject={currentProj}\r\n                        allUsers={allUsers}\r\n                    />\r\n                ) : (\r\n                    <ProjectSettings\r\n                        currentProj={currentProj}\r\n                        setCurrentView={setCurrentView}\r\n                        setCurrentProj={setCurrentProj}\r\n                        allProjects={allProjects}\r\n                        setAllProjects={setAllProjects}\r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function NewUser() {\r\n\r\n    const [name, setName] = useState('');\r\n    const user = localStorage.getItem('userName');\r\n\r\n    useEffect(() =>{\r\n        //Make sure a user is logged in if not then redirect to login\r\n        if(localStorage.getItem(\"userID\") === null){\r\n            navigate('/login');\r\n            return;\r\n        } \r\n    })\r\n\r\n    const createProject = () =>{\r\n\r\n        axios.post(\r\n            'http://localhost:8000/api/projects',\r\n            { name, users: [localStorage.getItem('userID')] },\r\n            { withCredentials: true }\r\n        )\r\n            .then(() => {\r\n                return navigate('/home');\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign:\"center\", margin:\"48px\"}}>\r\n            <h1>Welcome to Geera {user}!</h1>\r\n            <p>Get started by creating your first project!</p>\r\n            <input type=\"text\" \r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                placeholder=\"enter a project name...\"\r\n                style={{display:\"block\", margin:\"12px auto\", padding:\"4px\" }}/>\r\n            <button type=\"button\"\r\n                    onClick={ createProject }\r\n                    className=\"btn btn-primary\">\r\n                        Create Project!\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Login from './views/Login';\r\nimport Registration from './views/Registration';\r\nimport { Router, Redirect } from '@reach/router';\r\nimport Main from './views/Main';\r\nimport NewUser from './views/NewUser';\r\n\r\n\r\nfunction App() {\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Redirect from=\"/\" to=\"/register\" noThrow />\r\n                <Registration path=\"/register\" />\r\n                <Login path=\"/login\" />\r\n                <Main path=\"/home\" onSubmit={onSubmit} />\r\n                <Main path=\"/home/geer/:id\" onSubmit={onSubmit} />\r\n                <NewUser path=\"/welcome\"/>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <>\r\n        <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\r\n            integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\r\n            crossOrigin=\"anonymous\"\r\n        ></link>\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    </>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"issues_panel__207Cn\",\"dropDownButton\":\"issues_dropDownButton__f7nzu\",\"issueGroup\":\"issues_issueGroup__27twK\",\"issue\":\"issues_issue__3IAkc\",\"notSelected\":\"issues_notSelected__1k_sH\",\"selected\":\"issues_selected__1_okQ\",\"issueName\":\"issues_issueName__ue5C-\",\"checkbox\":\"issues_checkbox__1xUis\",\"issueNumber\":\"issues_issueNumber__2GqnJ\",\"refresh\":\"issues_refresh__1WQUY\",\"refreshIcon\":\"issues_refreshIcon__24jlv\",\"bottom\":\"issues_bottom__3VEod\",\"bottomText\":\"issues_bottomText__1AVmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__3FV-q\",\"taskParent\":\"main_taskParent__2w02u\",\"taskContent\":\"main_taskContent__1S0qo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskInfo\":\"task_taskInfo__2MtGG\",\"taskActivity\":\"task_taskActivity__1JvHC\",\"taskButton\":\"task_taskButton__U1yRi\",\"selectedButton\":\"task_selectedButton__3sP09\",\"saveButton\":\"task_saveButton__3jhzE\",\"cancelButton\":\"task_cancelButton__1ymNr\",\"textInput\":\"task_textInput__1BFQU\",\"commentArea\":\"task_commentArea__2mocv\",\"dropdown\":\"task_dropdown__HYrqs\"};"],"sourceRoot":""}